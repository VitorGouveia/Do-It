{"mappings":"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","sources":["node_modules/@swc/helpers/src/_define_property.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-f915f0e964c66dcb.js","apps/v1/src/typescript/modal.ts","apps/v1/src/typescript/theme.ts","apps/v1/src/typescript/todo.ts","apps/v1/src/typescript/index.ts","node_modules/@parcel/runtime-js/lib/runtime-f8992aa3ba17e7d6.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"k2Uek\\\":\\\"index.091a6b75.js\\\",\\\"cE9FN\\\":\\\"serviceWorker.js\\\"}\"));","export class Modal {\n  /* modal button activator */\n  public openModalButton: HTMLElement = document.querySelector(\".modal-button\")!;\n  public closeModalButton: HTMLElement = document.querySelector(\".close\")!;\n  public modal: HTMLElement = document.querySelector(\".modal\")!;\n\n  public window: Window = window;\n\n  constructor() {\n    this.onClick(this.openModalButton, () => this.showModal());\n\n    this.onClick(this.closeModalButton, () => this.hideModal());\n\n    this.window.onclick = ({ target }) => {\n      if (target == this.modal) {\n        this.hideModal();\n      }\n    }\n  }\n\n  onClick(element: HTMLElement, callback: Function) {\n    element.onclick = () => callback();\n  }\n\n  hideModal() {\n    this.modal.style.display = \"none\";\n  }\n  \n  showModal() {\n    this.modal.style.display = \"block\";\n  }\n}","export type PickTheme = \"red\" | \"yellow\" | \"green\"\n\nexport class Theme {\n  /* current theme */\n  public theme: PickTheme = \"red\"\n\n  /* default theme */\n  public defaultTheme: PickTheme = \"red\"\n\n  /* all available themes */\n  public availableThemes = {\n    red: \"red\",\n    yellow: \"yellow\",\n    green: \"green\"\n  }\n\n  constructor(theme: PickTheme) {\n    let newTheme = theme\n\n    /* searches for the parameter theme inside of the available theme object */\n    const isValidTheme = this.availableThemes[theme]\n    /* if the theme is invalid */\n    if(!isValidTheme) {\n      /* use the default theme */\n      newTheme = this.defaultTheme\n    }\n\n    this.setTheme(newTheme)\n  }\n\n  setTheme(theme: PickTheme) {\n    this.theme = theme\n\n    localStorage.setItem(\"theme\", theme)\n    document.body.setAttribute(\"data-theme\", theme)\n  }\n\n  cycle(): PickTheme {\n    const themeArray = Object.keys(this.availableThemes)\n\n    /* theme on the body */\n    const dataTheme = document.body.getAttribute(\"data-theme\") || this.defaultTheme\n    \n    /* get the index in the array of the theme in use */\n    const currentThemeIndex = themeArray.indexOf(dataTheme)\n\n    /* gets the max size of the theme array length */\n    const max = themeArray.length\n    /* goes to the next array item */\n    let next = currentThemeIndex + 1\n    \n    /* if the next item is the last item, go to 0 */\n    if(next === max) {\n      next = 0;\n    }\n\n    this.setTheme(themeArray[next] as PickTheme)\n\n    return themeArray[next] as PickTheme\n  }\n}","type TodoProps = {\n  ID: string\n  name: string\n  checked: boolean\n}\n\nexport class Todo {\n  public form: HTMLFormElement = document.querySelector(\"form\")!\n  public todoInput: HTMLInputElement = document.querySelector(\"#todo\")!\n\n  public modal: HTMLDivElement = document.querySelector(\".modal\")!\n\n  constructor() {\n    /* try to load the todos, if they dont exist yet, do nothing */\n    const allTodos = this.loadTodos()\n    allTodos.map(({ name, ID, checked }) => {\n      this.createTodo(name, ID, checked)\n    })\n\n    const checkboxes: NodeList = document.querySelectorAll('input[type=\"checkbox\"]')\n    checkboxes.forEach(checkbox => {\n      const input = checkbox as HTMLInputElement\n      input.addEventListener(\"change\", event => {\n        const Event = event as any\n\n        this.changeTodo(Event.target.id)\n      })\n    })\n\n    this.form.addEventListener(\"submit\", (event) => {\n      event.preventDefault()\n\n      this.modal.style.display = \"none\";\n      \n      /* get the input from the user */\n      const todo = this.todoInput.value\n\n      /* create the todo on screen */\n      const { todoID } = this.createTodo(todo)\n\n      /* save it to localStorage */\n      this.saveTodo(todo, todoID)\n\n      /* listen to TODO change */\n      this.todoInput.value = \"\"\n    })\n  }\n\n  createTodo(todo: string, id?: string, checked?: boolean) {\n    const ul = document.querySelector(\"ul\")\n    \n    const li = this.createElement(\"li\")\n\n    /* give an id to input and label */\n    const input = this.createElement(\"input\")\n    const label = this.createElement(\"label\")\n\n    /* get current time and use it as an ID */\n    const todoID = id || new Date().getTime().toString()\n\n    input.checked = checked || false\n    input.setAttribute(\"type\", \"checkbox\")\n    input.id = todoID\n    label.setAttribute(\"for\", todoID)\n\n    /* insert todo into the label */\n    label.innerText = todo\n    \n    ul?.appendChild(li);\n\n    li.appendChild(input);\n    li.appendChild(label);\n\n    return {\n      todoID\n    }\n  }\n\n  /* uses typescript to allow for tag autocompletion */\n  createElement<K extends keyof HTMLElementTagNameMap>(elementName: K) {\n    return document.createElement(elementName)\n  }\n\n  loadTodos(): TodoProps[] {\n    if(!localStorage.getItem(\"todo\")) {\n      return []\n    } else {\n      return JSON.parse(localStorage.getItem(\"todo\") || \"\")\n    }\n  }\n\n  saveTodo(todo: string, todoID: string, checked?: boolean) {\n    const allTodos = this.loadTodos()\n\n    const todos: TodoProps[] = [\n      ...allTodos,\n      {\n        ID: todoID,\n        name: todo,\n        checked: checked || false\n      }\n    ]\n\n    localStorage.setItem(\"todo\", JSON.stringify(todos))\n  }\n\n  changeTodo(todoID: string) {\n    const todos = this.loadTodos()\n    const todo = todos.find(todo => todo.ID === todoID)!\n\n    const allTodosWithoutChangedTodo = todos.filter(todo => todo.ID !== todoID)\n\n    const AllTodos: TodoProps[] = [\n      ...allTodosWithoutChangedTodo,\n      {\n        ID: todoID,\n        name: todo.name,\n        checked: !todo.checked\n      }\n    ].sort((a, b) => {\n      return parseFloat(a.ID) - parseFloat(b.ID);\n    })\n\n    localStorage.setItem(\"todo\", JSON.stringify(AllTodos))\n  }\n}","import { Modal } from \"./modal\";\nimport { PickTheme, Theme } from \"./theme\";\nimport { Todo } from \"./todo\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  /* initializes Modal */\n  new Modal();\n\n  /* initializes Todo */\n  new Todo();\n\n  const localTheme = localStorage.getItem(\"theme\");\n  const theme = new Theme(localTheme as PickTheme);\n\n  theme.cycle();\n})\n\nif(\"serviceWorker\" in navigator) {\n  window.addEventListener(\"load\", async () => {\n    try {\n      const register = await navigator.serviceWorker.register(new URL(\"../../serviceWorker.js\", import.meta.url))\n      \n      console.log(register)\n    } catch (error) {\n      console.log(error)\n    }\n  })\n}","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"cE9FN\")).toString();"],"names":["$7bf585a5fb98c0bc$export$2e2bcd8739ae039","obj","key","value","Object","defineProperty","enumerable","configurable","writable","$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$5b13ddc9f0930b83$export$2b77a92f1a5ad772","onClick","element","callback","onclick","hideModal","this","modal","style","display","showModal","constructor","document","querySelector","window","openModalButton","closeModalButton","target","$175cb96fdf00ea71$export$14faa19a0f3bbeb2","setTheme","theme","localStorage","setItem","body","setAttribute","cycle","themeArray","availableThemes","dataTheme","getAttribute","defaultTheme","next","indexOf","red","yellow","green","newTheme","$72bc7b156b31d591$export$9f7771068413722","createTodo","todo","checked","ul","li","createElement","input","label","todoID","Date","getTime","toString","innerText","appendChild","elementName","loadTodos","getItem","saveTodo","todos","ID","name","stringify","changeTodo","todo1","find","AllTodos","filter","sort","a","b","parseFloat","map","querySelectorAll","forEach","checkbox","addEventListener","event","Event","form","preventDefault","todoInput","localTheme","$575d374b8fa01f47$exports","URL","resolve","import","meta","url","navigator","async","serviceWorker","console","log","error"],"version":3,"file":"index.091a6b75.js.map"}